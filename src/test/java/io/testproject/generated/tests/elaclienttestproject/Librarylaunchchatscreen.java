package io.testproject.generated.tests.elaclienttestproject;

import io.appium.java_client.MobileElement;
import io.appium.java_client.remote.AndroidMobileCapabilityType;
import io.appium.java_client.remote.MobileCapabilityType;
import io.appium.java_client.remote.MobilePlatform;
import io.testproject.sdk.drivers.ReportingDriver;
import io.testproject.sdk.drivers.android.AndroidDriver;
import io.testproject.sdk.interfaces.junit5.ExceptionsReporter;
import java.lang.Exception;
import java.lang.Override;
import java.util.concurrent.TimeUnit;
import java.util.stream.Stream;
import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;
import org.openqa.selenium.By;
import org.openqa.selenium.remote.CapabilityType;
import org.openqa.selenium.remote.DesiredCapabilities;

/**
 * This class was automatically generated by TestProject
 * Project: ELA_CLIENT_TEST_PROJECT
 * Test: Library_Launch_Chat_Screen
 * Generated by: Sajid Ali (sajid.ali2@byjus.com)
 * Generated on Wed Oct 06 04:02:52 GMT 2021.
 */
@DisplayName("Library_Launch_Chat_Screen")
public class Librarylaunchchatscreen implements ExceptionsReporter {
  public static AndroidDriver<? extends MobileElement> driver;

  @BeforeAll
  static void setup() throws Exception {
    driver = new AndroidDriver<>("IFdKS8_gzRgiBaXL5EVgQtPpuBiFSD74cCXXB7dneYE", getCapabilities(), "Sajid Ali");
  }

  /**
   * In order to upload the test to TestProject need to un-comment @ArgumentsSource and set in comment the @MethodSource
   * @org.junit.jupiter.params.provider.ArgumentsSource(io.testproject.sdk.interfaces.parameterization.TestProjectParameterizer.class) */
  @DisplayName("Library_Launch_Chat_Screen")
  @ParameterizedTest
  @MethodSource("provideParameters")
  void execute() throws Exception {
    // set timeout for driver actions (similar to step timeout)
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);
    By by;
    boolean booleanResult;
    Login login;

    // 1. Re-Usable: Base Test can be used with different Test.
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(35000, TimeUnit.MILLISECONDS);
    GeneratedUtils.sleep(500);
    login = new Login();
    login.execute(driver);
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 2. Click 'com.byjus.tle.staging:id/libraryCard'
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(35000, TimeUnit.MILLISECONDS);
    GeneratedUtils.sleep(500);
    by = By.id("com.byjus.tle.staging:id/libraryCard");
    driver.findElement(by).click();
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 3. Is 'com.byjus.tle.staging:id/libraryThumb...2' present?
    GeneratedUtils.sleep(500);
    by = By.xpath("//android.view.ViewGroup[1]/android.widget.FrameLayout[1]/android.widget.FrameLayout/android.widget.ImageView[1]");
    driver.findElement(by);

    // 4. Is 'Library1' present?
    GeneratedUtils.sleep(500);
    by = By.id("com.byjus.tle.staging:id/pageTitleLibrary");
    driver.findElement(by);

  }

  @Override
  public ReportingDriver getDriver() {
    return (ReportingDriver) driver;
  }

  @AfterAll
  static void tearDown() {
    if (driver != null) {
      driver.quit();
    }
  }

  private static Stream provideParameters() throws Exception {
    return Stream.of(Arguments.of());
  }

  public static DesiredCapabilities getCapabilities() {
    DesiredCapabilities capabilities = new DesiredCapabilities();
    capabilities.setCapability(MobileCapabilityType.PLATFORM_NAME, MobilePlatform.ANDROID);
    capabilities.setCapability(MobileCapabilityType.UDID, "emulator-5554");
    capabilities.setCapability(CapabilityType.BROWSER_NAME, "");
    capabilities.setCapability(AndroidMobileCapabilityType.APP_PACKAGE, "com.byjus.tle.staging");
    capabilities.setCapability(AndroidMobileCapabilityType.APP_ACTIVITY, "com.byjus.ela.splash.activity.SplashActivity");
    return capabilities;
  }
}
